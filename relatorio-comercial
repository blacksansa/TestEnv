#include "RWMAKE.CH"
#include "TOPCONN.CH"
#include "PROTHEUS.CH"
#include "SIGAWIN.CH"
#include "TBICONN.CH"

//-------------------------------------------------------------------
// ORTR813H - Rotina principal de chamada do relatório (Simplificado).
//-------------------------------------------------------------------
User Function ORTR813H()
    Local aPergs    := {}
    Local aRet      := {}
    Private cTitulo   := "RELATORIO DE PRODUTOS SIMPLIFICADO" // Título ajustado
    Private cSemana   := ""
    Private cCalculo  := ""
    Private cGrupoDe  := space(4)
    Private cGrupoAte := "ZZZZ"
    Private cProdDe   := space(15)
    Private cProdAte  := "ZZZZZZZZZZZZZZZ"
    Private lDiferencas := .F.

    // Parâmetros para o relatório simplificado
    aAdd( aPergs, {1, "Semana :", U_ORTP169A(), "@!", ".T.", 'DA0', '.T.', 80, .T.})
    aAdd( aPergs, {1, "Grupo de", cGrupoDe, "", ".T.", 'SBM', '.T.', 50, .F.})
    aAdd( aPergs, {1, "Grupo Ate", cGrupoAte, "", ".T.", 'SBM', '.T.', 50, .T.})
    aAdd( aPergs, {1, "Produto de", cProdDe, "", ".T.", 'SB1', '.T.', 50, .F.})
    aAdd( aPergs, {1, "Produto Ate", cProdAte, "", ".T.", 'SB1', '.T.', 50, .T.})
    //adicinar perguntar exibir itens zerados

    If !Parambox( aPergs, cTitulo, aRet, /* bOk */, /* aButtons */, /* lCentered */, /* nPosX */, /* nPosy */, /* oDlgWizard */, "ORTR813H" + AllTrim(__cUserId) /* cLoad */, .T. /* lCanSave */, /* lUserSave */)
        Return
    EndIf

    cSemana        := PadL(MV_PAR01, 3, "0")
    cGrupoDe       := MV_PAR02
    cGrupoAte      := MV_PAR03
    cProdDe        := MV_PAR04
    cProdAte       := MV_PAR05

    If MsgYesNo("Deseja verificar somente os itens com diferença?","Atenção!")
        lDiferencas := .T.
    EndIf

    Processa({|| Relatorio()}, "Aguarde...", "Gerando relatorio...", .F.)

Return

//-------------------------------------------------------------------
// Relatorio() - Busca os dados e monta o array para impressão (sempre simplificado).
//-------------------------------------------------------------------
Static Function Relatorio()
    Local cQry      := ""
    Local cTabGer   := cSemana
    Local aReport   := {}
    Local nDif      := 0.00
    Local nPrcVenda := 0.00
    Local nCusto    := 0.00

    ProcRegua(0)

    cTitulo := cTitulo + " Semana :" + cTabGer

    // Query para o relatório simplificado
    cQry := " SELECT "
    cQry += "        B1_COD,"
    cQry += "        DA1_PRCVEN,"
    cQry += "        DA1_XCUSTO,"
    cQry += "        B1_XMARKUP"
    cQry += "  FROM SIGA.DA1030 DA1"
    cQry += "      INNER JOIN SIGA.SB1030 SB1 ON B1_FILIAL = ' ' "
    cQry += "                   AND B1_COD = DA1_CODPRO"
    cQry += "                   AND SB1.D_E_L_E_T_ = ' '"
    cQry += "      INNER JOIN SIGA.SBM200 SBM ON BM_FILIAL = ' '"
    cQry += "                   AND BM_GRUPO = B1_GRUPO"
    cQry += "                   AND SBM.D_E_L_E_T_ = ' '"
    cQry += "    WHERE DA1_FILIAL = ' ' AND"
    cQry += "     DA1.D_E_L_E_T_ = ' ' AND"
    cQry += "     DA1_CODTAB = '" + cTabGer + "'"
    cQry += " AND B1_GRUPO >= '" + cGrupoDe + "'"
    cQry += " AND B1_GRUPO <= '" + cGrupoAte + "'"
    cQry += " AND B1_COD >= '" + cProdDe + "'"
    cQry += " AND B1_COD <= '" + cProdAte + "'"
    cQry += "    ORDER BY B1_COD"

    U_ORTQUERY(cQry, "OTR814")

    While OTR814->(!EOF())
        IncProc()
        nPrcVenda := OTR814->DA1_PRCVEN
        nCusto    := OTR814->DA1_XCUSTO
        nDif      := nPrcVenda - nCusto
        
        // Se a opção de somente diferenças estiver ativada e a diferença for zero, pule o registro
        If lDiferencas .and. nDif == 0
            OTR814->(dbSkip())
            Loop
        EndIf

        // Monta o array para o relatório simplificado
        aAdd(aReport, {;
            AllTrim(OTR814->B1_COD),;
            Transform(nPrcVenda, "@E 99999.99"),;
            Transform(nCusto, "@E 99999.99"),;
            Transform(OTR814->B1_XMARKUP, "@E 9.9999"),;
            Transform(nDif, "@E 99999.99")})

        OTR814->(dbSkip())
    EndDo

    // Define o cabeçalho do relatório simplificado
    aCabRel := {"Codigo", "Preco Venda", "Custo", "Marcacao", "Diferenca"}

    If Len(aReport) > 0
        fImpMar("ORTR813H", cTitulo, aCabRel, aReport, .T., .F.,, .T.,"c:\temp\", .F., .T.)
    Else
        Alert("Não foram encontrados registros com os dados informados. Certifique-se de que a operacao de gerar tenha sido realizada.")
    Endif

Return

//-------------------------------------------------------------------
// fImpMar() - Função principal de impressão
//-------------------------------------------------------------------
Static Function fImpMar(cProg, cCab, aHead, aItens, lBox, lRetr, aObj, lPdf, cCaminho, lCSV, lSimplesReport)
Private titulo := cCab
Private nomeprog := cProg
Private _aHead := aHead
Private _aItens := aItens
Private lImpBox := lBox
Private lRetrato := lRetr
Private oPrn, oFontM, oFontP
Private cHora := Time()
Private lprimeira := .T.
Private nPag := 0
Private cNomFil := ""
Private nEsp := 50
Private aBox1 := {}
Private aCab1 := {}
Private cLogo := "lgrl" + cEmpAnt + ".bmp"
Private nLin := 3500
Private nHTam := 2380
Private nLimite := 3200
Private aObjt := {}
Private nPdf := 0
Private lSimplesReportLocal := lSimplesReport // Variável local para o parâmetro

Default aObj := {}
Default lPdf := .T.
Default cCaminho := ""
Default lCSV := .F.

aObjt := aObj

If MsgYesNo("Deseja gerar o relatório em Excel?","Gerar planilha em Excel")
    lCSV := .T.
EndIf

nEsp := 10
nPdf := 2

if !lRetrato
    nLin := 3500
    nHTam := 825
    nLimite := 560
EndIf

If !File(cLogo)
    cLogo := "lgrl" + cFilAnt + ".bmp"
EndIf

if len(_aHead) == 0 .or. len(_aItens) == 0
    alert("Não há dados a serem impressos")
    return
endif

dbSelectArea("SM0")
dbSeek(cEmpAnt+cFilAnt)
cNomFil := SM0->M0_FILIAL

If lCSV
    Processa({||PrintCSV(aHead, aItens, cCaminho, cProg)},'Gerando arquivo CSV...')
Else
    oPrn := TReport():New(nomeprog, Titulo, , {|oPrn| GrR(oPrn, lPdf, lSimplesReportLocal)}, Titulo)

    oPrn:SetPortrait()
    if !lRetrato
        oPrn:SetLandscape()
    endif
    oPrn:SetEdit(.F.)
    oPrn:NoUserFilter()
    oPrn:DisableOrietation()
    oPrn:HideHeader()
    oPrn:HideFooter()
    oPrn:PrintDialog()
EndIf

If !lCSV
    FreeObj(oPrn)
Endif
oPrn := Nil
Ms_Flush()

Return

//-------------------------------------------------------------------
// GrR() -
//-------------------------------------------------------------------
Static Function GrR(oPrn, lpdf, lSimplesReportLocal)
    oPrn:SetPortrait()
    if !lRetrato
        oPrn:SetLandscape()
    endif

    If !lpdf
        if oPrn:nDevice == 6
            oFontM := TFont():New('Courier new',, 10,, .T.,,,,,.F.,.F.)
            oFontP := TFont():New('Courier new',, 09,, .T.,,,,,.F.,.F.)
            oPrn:Init()
            oPrn:oprint:nMargLeft := 40
            oPrn:oPrint:lPDFasPNG := .T.
            oPrn:oPrint:nPageWidth := 2380
            oPrn:nPageWidth := 2380
            oPrn:oPrint:lServer := .T.
            nHTam := 2380
        Endif
    EndIF
    
    RptStatus({|| GeraRel(oPrn, lpdf, lSimplesReportLocal)}, Titulo)
Return

//-------------------------------------------------------------------
// GeraRel() -
//-------------------------------------------------------------------
Static Function GeraRel(oPrn, lpdf, lSimplesReportLocal)
    Local i
    SetRegua(len(_aItens))

    For i:=1 to len(_aItens)
        If nLin > nLimite
            // Sempre chama o cabeçalho simplificado
            nLin := fImpCabSimples(oPrn, lpdf)
        Endif

        IncRegua()

        // Sempre chama a impressão de linha simplificada
        fImpBxLSimples(_aItens[i], oPrn)
        nLin += nEsp
    Next
    MS_FLUSH()
Return

//-------------------------------------------------------------------
// fImpCabSimples() - Imprime cabeçalho simplificado.
//-------------------------------------------------------------------
Static Function fImpCabSimples(oPrn, lpdf)
    Local nTam
    nPag += 1

    If nPag > 1
        oPrn:EndPage()
    EndIf

    oPrn:StartPage()
    oPrn:SetPortrait()
    nLin := 10

    oPrn:Box(nLin, 01, nLin+nEsp*3+nPdf, nHTam)

    oPrn:Say (nLin, 10, "Hora: " + cHora + " - (" + nomeprog + ")", oFontM)
    oPrn:Say (nLin+nEsp*2, 10, "Empresa: " + cEmpAnt + " / Filial: " + cNomFil, oFontM)

    oPrn:Say (nLin+nEsp, 10, PADC(AllTrim(Upper(titulo)), 119), oFontM)

    nTam := IIf(lPdf,05,20)*( Len("Emissão:" + Dtos(Date())) )+IIf(lPdf,10,40)
    oPrn:Say (nLin, nHTam-nTam, "Folha: " + AllTrim(Str(nPag)), oFontM)
    oPrn:Say (nLin+nEsp*2, nHTam-nTam, "Emissão:" + DtoC(Date()), oFontM)

    nLin += nEsp*2
    
    nLin += nEsp + 10
    oPrn:Line(nLin, 0, nLin, nHTam)

    // Cabeçalhos das colunas simplificadas
    oPrn:Say(nLin + 30, 30, "CODIGO", oFontM)
    oPrn:Say(nLin + 30, 230, "PRECO VENDA", oFontM)
    oPrn:Say(nLin + 30, 480, "CUSTO", oFontM)
    oPrn:Say(nLin + 30, 680, "MARCACAO", oFontM)
    oPrn:Say(nLin + 30, 880, "DIFERENCA", oFontM)

    oPrn:Line(nLin + nEsp + 10, 0, nLin + nEsp + 10, nHTam)
    
    nLin += nEsp + 10

Return(nLin)

//-------------------------------------------------------------------
// fImpBxLSimples() - Imprime a linha do relatório simplificado.
//-------------------------------------------------------------------
Static Function fImpBxLSimples(aVetImp, oPrn)
    Local nCol

    nCol := 10
    oPrn:Say(nLin, nCol, aVetImp[1], oFontM) // Código

    nCol := 230
    oPrn:Say(nLin, nCol, aVetImp[2], oFontM) // Preço Venda

    nCol := 480
    oPrn:Say(nLin, nCol, aVetImp[3], oFontM) // Custo

    nCol := 680
    oPrn:Say(nLin, nCol, aVetImp[4], oFontM) // Marcação

    nCol := 880
    oPrn:Say(nLin, nCol, aVetImp[5], oFontM) // Diferença

    oPrn:Line(nLin+nEsp, 0, nLin+nEsp, nHTam)

Return

//-------------------------------------------------------------------
// PrintCSV() - Gera o arquivo CSV com os dados.
//-------------------------------------------------------------------
Static Function PrintCSV(aHead,aDados,cCaminho, cProg)
    Local cNomeCSV  := cProg + "_" + StrTran(DToS(Date()) + "_" + Time(), ":", "") + ".CSV"
    Local cArquivo  := cCaminho + cNomeCSV
    Local cLinha    := ""
    Local i,z

    FwMakeDir( cCaminho, .T. )

    If File( cArquivo )
        FErase( cArquivo )
    End If

    cArqRef := MsFCreate( cArquivo )

    ProcRegua(len(aDados))

    // GRAVA CABECALHO
    For i:=1 TO Len(aHead)
        cLinha += Alltrim(aHead[i]) + ";"
    Next i

    
    cLinha += CRLF
    FWrite( cArqRef, cLinha )
    cLinha := ""

    // GRAVA DADOS
    For i:=1 TO Len(aDados)
        IncProc()
        For z:=1 TO Len(aDados[i])
            cLinha += Alltrim(aDados[i][z])+";"
        Next z
        cLinha += CRLF
        FWrite( cArqRef, cLinha )
        cLinha := ""
    Next i

    FClose( cArqRef )
    Aviso( "Atenção", "Foi criado o arquivo abaixo." + CRLF + cArquivo, { "Ok" } )
    ShellExecute("open", cNomeCSV, "", cCaminho, 1)

Return

