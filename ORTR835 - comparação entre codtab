#INCLUDE "RWMAKE.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "FWBROWSE.CH"
#INCLUDE "TOTVS.CH"
#INCLUDE "TBICONN.CH"

//TEMPLATE BEGIN
User Function ORTR814H()

    Local aArea    := GetArea()
    Local oReport  := Nil
    Local aRet     := {}
    Local c_Titulo := "Relatório Comparação de Tabelas"

    Local aPergs   := {}

    Private cSemanaBase := ""
    Private cSemanaComp := ""
    Private cProDe      := ""
    Private cProdAte    := ""
    Private lDiferenca  := .F.

    // Perguntas
    aAdd(aPergs, {1, "Tabela Base:",       Space(GetSX3Cache("DA0_CODTAB", "X3_TAMANHO")), , , "DA0", , 50, .T.})
    aAdd(aPergs, {1, "Tabela Comparação:", Space(GetSX3Cache("DA0_CODTAB", "X3_TAMANHO")), , , "DA0", , 50, .T.})
    aAdd(aPergs, {1, "Produto De:",        Space(GetSX3Cache("B1_COD", "X3_TAMANHO")) , , "MV_PAR02 <= MV_PAR03", "SB1", , 80, .F.})
    aAdd(aPergs, {1, "Produto Até:",       Replicate("Z",GetSX3Cache("B1_COD", "X3_TAMANHO")) , , "MV_PAR02 <= MV_PAR03", "SB1", , 80, .F.})
    aAdd(aPergs, {3, "Considerar Apenas Divergências", 2 , {"SIM","NÃO"} , 100, , .F.})

    If !ParamBox(aPergs, c_Titulo, aRet)
        MsgStop("Emissão do relatório cancelada.","Atenção")
        RestArea(aArea)
        Return
    Else
        cSemanaBase := AllTrim(aRet[1])
        cSemanaComp := AllTrim(aRet[2])
        cProDe      := AllTrim(aRet[3])
        cProdAte    := AllTrim(aRet[4])
        lDiferenca  := IIf(aRet[5] == 1,.T.,.F.)
    EndIf

    oReport := fRodaRelat(UPPER(c_Titulo))
    oReport:PrintDialog()

    RestArea(aArea)

Return

//--- Monta Relatório
Static Function fRodaRelat(cTitulo)

    Local oReport   := Nil
    Local oSection1 := Nil

    oReport := TReport():New("ORTP814",cTitulo,"ORTP814",{|oReport| fExecRel(oReport)},UPPER(cTitulo)+" - ORTOBOM UNIDADE "+cEmpAnt)

    oReport:SetTotalInLine(.T.)
    oReport:NoUserFilter()
    oReport:HideParamPage()
    oReport:SetLandScape()
    oReport:oPage:SetPaperSize(9)

    // Seção
    oSection1 := TRSection():New(oReport,"COMPARAÇÃO")
    oSection1:SetHeaderBreak(.T.)
    oSection1:SetLinesBefore(1)
    oSection1:lAutoSize := .F.
    oSection1:lBold := .T.

    TRCell():New(oSection1,"B1_COD",,"PRODUTO")
    oSection1:Cell("B1_COD"):SetSize(20)

    TRCell():New(oSection1,"B1_DESC",,"DESCRIÇÃO")
    oSection1:Cell("B1_DESC"):SetSize(40)

    // Custos e Vendas Base
    TRCell():New(oSection1,"CUSTO_BASE",,"CUSTO BASE")
    TRCell():New(oSection1,"VENDA_BASE",,"VENDA BASE")

    // Custos e Vendas Comparação
    TRCell():New(oSection1,"CUSTO_COMP",,"CUSTO COMPARAÇÃO")
    TRCell():New(oSection1,"VENDA_COMP",,"VENDA COMPARAÇÃO")

    // Diferenças
    TRCell():New(oSection1,"DIF_CUSTO",,"DIF. CUSTO")
    TRCell():New(oSection1,"DIF_VENDA",,"DIF. VENDA")

    // Percentuais
    TRCell():New(oSection1,"PCT_CUSTO",,"% CORRETO CUSTO")
    TRCell():New(oSection1,"PCT_VENDA",,"% CORRETO VENDA")

    oSection1:SetPageBreak(.T.)

Return oReport

//--- Executa a Query e imprime
Static Function fExecRel(oReport)

    Local _aArea     := GetArea()
    Local cQry       := ""
    Local oSection1  := oReport:Section(1)
    Private oBreak

    cQry := " SELECT SB1.B1_COD, SB1.B1_DESC, "
    cQry += " DA1B.DA1_XCUSTO AS CUSTO_BASE, "
    cQry += " DA1B.DA1_PRCVEN AS VENDA_BASE, "
    cQry += " DA1C.DA1_XCUSTO AS CUSTO_COMP, "
    cQry += " DA1C.DA1_PRCVEN AS VENDA_COMP, "
    cQry += " (DA1C.DA1_XCUSTO - DA1B.DA1_XCUSTO) AS DIF_CUSTO, "
    cQry += " (DA1C.DA1_PRCVEN - DA1B.DA1_PRCVEN) AS DIF_VENDA, "
    cQry += " (CASE WHEN DA1B.DA1_XCUSTO = 0 THEN 0 ELSE (1 - ((DA1C.DA1_XCUSTO - DA1B.DA1_XCUSTO) / DA1B.DA1_XCUSTO)) * 100 END) AS PCT_CUSTO, "
    cQry += " (CASE WHEN DA1B.DA1_PRCVEN = 0 THEN 0 ELSE (1 - ((DA1C.DA1_PRCVEN - DA1B.DA1_PRCVEN) / DA1B.DA1_PRCVEN)) * 100 END) AS PCT_VENDA "
    cQry += " FROM " + RetSqlName("SB1") + " SB1 "
    cQry += " INNER JOIN " + RetSqlName("DA1") + " DA1B "
    cQry += "   ON DA1B.DA1_CODPRO = SB1.B1_COD "
    cQry += "  AND DA1B.DA1_CODTAB = '" + cSemanaBase + "' "
    cQry += "  AND DA1B.D_E_L_E_T_ = ' ' "
    cQry += "  AND DA1B.DA1_FILIAL = ' ' "
    cQry += " INNER JOIN " + RetSqlName("DA1") + " DA1C "
    cQry += "   ON DA1C.DA1_CODPRO = SB1.B1_COD "
    cQry += "  AND DA1C.DA1_CODTAB = '" + cSemanaComp + "' "
    cQry += "  AND DA1C.D_E_L_E_T_ = ' ' "
    cQry += "  AND DA1C.DA1_FILIAL = ' ' "
    cQry += " WHERE SB1.B1_FILIAL = ' ' "
    cQry += "   AND SB1.D_E_L_E_T_ = ' ' "
    cQry += "   AND SB1.B1_COD >= '" + cProDe + "' "
    cQry += "   AND SB1.B1_COD <= '" + cProdAte + "' "

    If lDiferenca
        cQry += " AND (DA1C.DA1_XCUSTO <> DA1B.DA1_XCUSTO OR DA1C.DA1_PRCVEN <> DA1B.DA1_PRCVEN) "
    EndIf

    cQry += " ORDER BY SB1.B1_COD "

    U_ORTQUERY(cQry, "ORTP814")
    ORTP814->(dbGoTop())

    oSection1:Init()
    oSection1:SetHeaderSection(.T.)

    While !("ORTP814")->(EOF())
        oReport:IncMeter()
        If oReport:Cancel()
            Exit
        EndIf

        oSection1:Cell("B1_COD"   ):SetValue( ORTP814->B1_COD )
        oSection1:Cell("B1_DESC"  ):SetValue( ORTP814->B1_DESC )
        oSection1:Cell("CUSTO_BASE" ):SetValue( ORTP814->CUSTO_BASE )
        oSection1:Cell("VENDA_BASE" ):SetValue( ORTP814->VENDA_BASE )
        oSection1:Cell("CUSTO_COMP" ):SetValue( ORTP814->CUSTO_COMP )
        oSection1:Cell("VENDA_COMP" ):SetValue( ORTP814->VENDA_COMP )
        oSection1:Cell("DIF_CUSTO"  ):SetValue( ORTP814->DIF_CUSTO )
        oSection1:Cell("DIF_VENDA"  ):SetValue( ORTP814->DIF_VENDA )
        oSection1:Cell("PCT_CUSTO"  ):SetValue( ORTP814->PCT_CUSTO )
        oSection1:Cell("PCT_VENDA"  ):SetValue( ORTP814->PCT_VENDA )

        oSection1:PrintLine()
        ORTP814->(dbSkip())
    EndDo

    oSection1:Finish()
    ORTP814->(DbCloseArea())
    oReport:EndPage()
    RestArea(_aArea)

Return(.T.)
